#Broscoteanu Daria-Mihaela 143
#Pentru un cuvânt c=s1...sn și un număr natural pozitiv k<n permutarea circulară la stânga cu k poziții a lui
# c este sk+1…sns1…sk . De exemplu, pentru k=2 și cuvântul arc se obține cuvântul car.

#) [1p] Scrieți o funcție permuta_cuvinte cu 2 parametri: prop, k (în această ordine),
# unde prop este o propoziție în care cuvintele sunt separate prin câte un spațiu, iar k este un număr natural pozitiv.
# Funcția returnează două valori:

#- propoziția obținută modificând propoziția prop astfel:
# fiecare cuvânt de lungime cel puțin k+1 este înlocuit cu permutarea sa la stânga cu k poziții

#- numărul de cuvinte modificate

def permuta_cuvinte(s,k):
    rez=""
    for x in s.split():
        if len(x)>=k+1:
            p=k
            while p>=1:
                car=x[0]
                sir=x[1:]
                cuv=sir+car
                x=cuv
                p=p-1
            if rez=="":
                rez=x
            else:
                rez=rez+" "+x
        else:
            if rez=="":
                rez=x
            else:
                rez=rez+" "+x
    return rez
#print(permuta_cuvinte("ananas",2))

#b) [1p] Scrieți o funcție sub_medie cu un parametru, care primește ca parametru o
# listă de numere naturale și returnează două valori: media aritmetică a numerelor din listă
# (suma lor împărțită la numărul lor) precum și numărul de elemente din listă mai mici strict decât media;
# dacă lista este vidă atunci funcția va returna None.

def sub_medie(l):
    if len(l)==0:
        return None
    else:
        s=sum(l)
        nr=len(l)
        med=s/nr
        numar=0
        for x in l:
            if x<med:
                numar+=1
        return med,numar

#print(sub_medie([1,2,3,4,5]))

#c) [1p] Se dă fișierul "circular.in" cu următoarea structură:

#- pe fiecare linie a fișierului se află o propoziție cu cuvintele separate prin câte un spațiu

#Se citește de la tastatură un număr natural k.  Folosind apeluri utile ale funcțiilor de la a) și b) să se rezolve următoarele cerințe:

#- să se creeze un nou fișier "circular.out" cu propozițiile din fișierul "circular.in"
# modificate astfel:  fiecare cuvânt de lungime cel puțin k+1 este înlocuit cu permutarea sa la stânga cu k poziții

#- să se afișeze pe ecran numărul mediu de modificări de pe o linie cu două zecimale
# (=media aritmetică a șirului format cu numărul de modificări de pe fiecare linie)
# și pe câte linii numărul de modificări a fost mai mic decât numărul mediu de modificări.

#Pentru punctul c) se acordă 0,75p dacă este rezolvat corect, dar fără a folosi funcțiile de la a) și b).

k=int(input())
f=open("circular.in")
g=open("circular.out","w")
s=f.readline()
l=[]
while s!="":
    nrmod=0
    p=s
    for x in s.split():
        if len(x)>=k+1:
            nrmod+=1
    l.append(nrmod)
    rez=permuta_cuvinte(p,k)
    g.write(rez)
    g.write("\n")
    s=f.readline()
g.close()
f.close()
med,nr=sub_medie(l)
print(f"{med:.2f} {nr}")

