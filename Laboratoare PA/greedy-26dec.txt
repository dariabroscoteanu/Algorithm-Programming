#cuburi
f=open("date.in")
g=open("date.out","w")
s=f.readline()
n,p=s.split()
n=int(n)
p=int(p)
l=[]
nr=0
poz=[]
for i in range(n):
    s = f.readline()
    a,b=s.split()
    a=int(a)
    b=int(b)
    c=[a, b]
    poz.append(i)
    l.append(c)

t=sorted(poz,key=lambda e: -l[e][0])
print(t)
h=l[t[0]][0]
sol=[t[0]+1]
us=t[0]
for i in range(1,n):
    k=l[us][1]
    if k!=l[t[i]][1] and l[t[i]][0]<l[us][0]:
        h=h+l[t[i]][0]
        us=t[i]
        sol.append(t[i]+1)
print(h)
print(sol)
g.close()
f.close()




f=open("date.in")
g=open("date.out","w")
n=f.readline()
n=int(n)
l=[]
for i in range(n):
    s=f.readline()
    p,u=s.split()
    p=int(p)
    u=int(u)
    ll=[p,u]
    l.append(ll)
f.close()

ls=sorted(l)
sali=[]
import heapq
h=[]
sali.append(ls[0])
heapq.heappush(h,(ls[1],0))
for i in range(1,n):
    t,nrsala=heapq.heappop(h)
    if ls[i][0]>t:
        sali[nrsala].append(ls[i])
        heapq.heappush(h,(ls[i][1],nrsala))
    else:
        sali.append(ls[i])
        heapq.heappush(h,(ls[i][1],len(sali)-1))
        heapq.heappush(h,(t,nrsala))
for i in range(len(sali)):
    print(i+1,sali[i])
g.close()




#banda
f=open("date.in")

n=f.readline()
n=int(n)
l=[]
poz=[]
for i in range(n):
    s=f.readline()
    x,y=s.split()
    x=int(x)
    y=int(y)
    ll=[x,y]
    l.append(ll)
    poz.append(i)
poz.sort(key=lambda e:-l[e][1]/l[e][0])
for i in range(len(poz)):
    print(poz[i]+1)
f.close()




f=open("date.in")
n=f.readline()
n=int(n)
l=[]
poz=[]
for i in range(n):
    s=f.readline()
    x,y=s.split()
    x=int(x)
    y=int(y)
    ll=[x,y]
    l.append(ll)
    poz.append(i+1)
f.close()
t=sorted(poz,key=lambda e:(l[e-1][1],-l[e-1][0]))
print(t)
start=0
stop=0
dif=0
for i in range(n):
    k=t[i]-1
    start=stop
    stop=stop+l[k][0]
    print(start, stop,l[k][0],l[k][1])
    dif=max(dif,stop-l[k][1])
print(dif)





f=open("date.in")
n=f.readline()
n=int(n)
l=[]
poz=[]
for i in range(n):
    s=f.readline()
    x,y=s.split()
    x=int(x)
    y=int(y)
    ll=[x,y]
    l.append(ll)
    poz.append(i+1)
t=sorted(poz,key=lambda e:-l[e-1][0]/l[e-1][1])
print(t)
profit=l[t[0]-1][0]
sol=[]
sol.append(t[0])
timp=1
print(sol)
for i in range(1,n):
    k=t[i]-1
    if timp+1<=l[k][1]:
        timp=timp+1
        sol.append(t[i])
        profit=profit+l[k][0]
print(profit)
print(sol)

f.close()



f=open("date.in")
s=f.readline()
l=[int(x) for x in s.split()]
n=len(l)
h=[]
import heapq
for i in range(n):
    heapq.heappush(h,l[i])
suma=0
s=0
for i in range(2,n):
    x=heapq.heappop(h)
    y=heapq.heappop(h)
    s=x+y
    suma=suma+s
    heapq.heappush(h,s)
print(suma*2)
f.close()


