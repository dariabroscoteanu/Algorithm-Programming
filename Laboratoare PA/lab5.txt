"""h=[]
import heapq
heapq.heappush(h,7)
print(h)
heapq.heappush(h,1)
print(h)
heapq.heappush(h,3)
print(h)
heapq.heappush(h,5)
print(h)
heapq.heappush(h,2)
print(h)
"""
f=open("date.in","r")
n=f.readline()
n=int(n)
l=[]
for i in range(n):
    s=f.readline()
    x,y=s.split()
    x=int(x)
    y=int(y)
    a=[]
    a.append(x)
    a.append(y)
    l.append(a)
f.close()
t=sorted(l,key=lambda e:e[1])
print(t)
sol=[0]
us=0
for i in range(1,n):
    if t[us][1]<t[i][0]:
        sol.append(i)
        us=i
print(sol)







import heapq
f=open("date.in","r")
n=f.readline()
n=int(n)
l=[]
for i in range(n):
    s=f.readline()
    x,y=s.split()
    x=int(x)
    y=int(y)
    a=[]
    a.append(x)
    a.append(y)
    l.append(a)
f.close()
#t=sorted(l,key=lambda e:e[0])
t=sorted(l)
print(t)
p=(t[0][1],0)
h=[]
heapq.heappush(h,p)
sali=[]
sali.append([t[0]])
for i in range(1,n):
    x=heapq.heappop(h)
    sala=x[1]
    timp=x[0]
    if t[i][0]>timp:
        sali[sala].append(t[i])
        p=(t[i][1],sala)
        heapq.heappush(h,p)
    else:
        sali.append([t[i]])
        p = (t[i][1], len(sali)-1)
        heapq.heappush(h, p)
        heapq.heappush(h,x)
print(sali)







