#1. Se dă o sumă S şi n tipuri de monede având valorile v1, v2, ..., vn lei 
#(un număr nelimitat de valori de fiecare tip). Se cer toate modalităţile de plată a sumei S
#utilizând aceste monede.
#Exemplu: Pentru S=20 şi n=3 tipuri de monede, cu valorile v1=1, v2=5, v3=10 putem 
#avea următoarele modalităţi de plată (pentru

#a
f=open("date.in")
S,n=f.readline().split()
S=int(S)
n=int(n)
v=[int(x) for x in f.readline().split()]
x=[0 for i in range(n+1)]
s=0
x[0]=1
def plata(k):
    global s
    if k==n+1:
        if s==S:
            print(*x[1:k],sep=", ")
    else:
        nr=S//v[k-1]
        for i in range(0,nr+1):
            x[k]=i
            s=s+x[k]*v[k-1]
            if k<n+1:
                plata(k+1)
            s = s - x[k] * v[k - 1]
plata(1)

#b) Se dau în plus un număr natural M și numerele nr1,... nrn cu nri reprezentând 
#numărul de monede de valoare vi pe care le avem la dispoziție (nu mai avem un număr nelimitat).
# Se cer toate modalitățile de plată a sumei S utilizând aceste monede,
# dar care nu folosesc mai mult de M monede.

f=open("date.in")
S,n=f.readline().split()
S=int(S)
n=int(n)
v=[int(x) for x in f.readline().split()]
M=int(f.readline())
limit=[int(i) for i in f.readline().split()]
x=[0 for i in range(n+1)]
s=0

def plata1(k):
    global s
    if k==n+1:
        if s==S and sum(x)<=M:
            print(*x[1:k],sep=", ")
    else:
        for i in range(0,limit[k-1]+1):
            x[k]=i
            s=s+x[k]*v[k-1]
            if k<n+1:
                plata1(k+1)
            s = s - x[k] * v[k - 1]
plata1(1)



#2. Se dau n mulțimi (elementele fiecărei mulțimi se dau pe o linie, separate prin spațiu).
# Să se afișeze elementele produsului cartezian al celor n mulțimi
f=open("date.in")
n=int(f.readline())
l=[]
for i in range(n):
    ll=[int(x) for x in f.readline().split()]
    l.append(ll)
print(l)
x=[0 for i in range(n+1)]
def ProdusCartezian(k):
    if k==n+1:
        for i in range(1,n+1):
            print(l[i-1][x[i]-1],end=" ")
        print()
    else:
        nr=len(l[k-1])
        for i in range(1,nr+1):
            x[k]=i
            if k<n+1:
                ProdusCartezian(k+1)
ProdusCartezian(1)
f.close()




#3. Pentru elaborarea unui test de aptitudini avem un set de n întrebări,
# fiecare fiind cotată cu un număr de puncte dat.
# Să se elaboreze toate chestionarele având a întrebări distincte, fiecare chestionar totalizând p puncte.
# Întrebările sunt date prin număr şi punctaj.
# Nu se ţine cont de ordinea întrebărilor în chestionar
# (de exemplu chestionarul cu întrebările 1 şi 2 este acelaşi cu chestionarul cu întrebările 2 şi 1)

f=open("date.in")
n,a,p=f.readline().split()
n=int(n)
a=int(a)
p=int(p)
intrebari=[int(i) for i in f.readline().split()]
x=[0 for i in range(a+1)]
s=0
def chestionare(k):
    global s
    if k==a+1:
        if s==p:
            print(*x[1:k],sep=" ")
    else:
        for i in range(x[k-1],n+1):
            x[k]=i
            s=s+intrebari[i-1]
            if x[k] not in x[:k]:
                if s<=p:
                    chestionare(k+1)
            s=s-intrebari[i-1]
chestionare(1)
f.close()



#4. Să se descompună un număr natural n în toate modurile posibile distincte ca sumă de numere
#prime (de exemplu, pentru n = 10 descompunerile sunt 2+2+2+2+2, 2+2+3+3, 2+3+5, 5+5,
#3+7).
n=int(input())
ciur=[0 for i in range(n+1)]
ciur[0]=ciur[1]=1
for i in range(2,n+1):
    if ciur[i]==0:
        nr=n//i
        for j in range(2,nr+1):
            ciur[i*j]=1
x=[0 for i in range(n+1)]
s=0
x[0]=1
def suma(k):
    global s
    if s==n:
        print(*x[1:k],sep="+")
    else:
        for i in range(x[k-1],n+1):
            if ciur[i]==0:
                x[k]=i
                s=s+i
                if s<=n:
                    suma(k+1)
                s=s-i
suma(1)